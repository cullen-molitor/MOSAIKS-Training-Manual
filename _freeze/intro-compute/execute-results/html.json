{
  "hash": "1805698d289736e4a1514d2ac554f6ce",
  "result": {
    "markdown": "# Compute Setup\n\n\n\n:::: status\n::: callout-warning \nThis chapter is in early draft form and may be incomplete.\n:::\n::::\n\n\n<!-- - Laptop with internet access\n- Google account requirement\n- Google Colab setup  \n- Laptop setup  \n- Server setup  \n- GPU considerations -->\n\nThis course will primarily use Google Colaboratory (Colab) for our computational needs. Colab is a free, cloud-based platform that allows you to write and execute Python code through your browser. It comes with many pre-installed libraries and provides free access to computing resources, including GPUs.\n\n## Requirements\n\nTo participate in the coding portions of this course, you'll need:\n\n- A laptop or desktop computer\n- Reliable internet connection\n- A Google account (if you don't have one, create one at accounts.google.com)\n- A modern web browser (Chrome recommended)\n\n## Getting Started with Google Colab\n\n### Accessing Colab\n\n1. Go to [colab.research.google.com](https://colab.research.google.com)\n2. Sign in with your Google account\n3. Click \"New Notebook\" to create your first Colab notebook\n\n### Understanding the Interface\n\nThe Colab interface is similar to Jupyter notebooks, with a few key components:\n\n- **Menu Bar**: Contains File, Edit, View, Insert, Runtime, Tools, and Help options\n- **Toolbar**: Quick access to common actions like adding code/text cells\n- **Cell Area**: Where you write and execute code or text\n- **Runtime Status**: Shows the state of your notebook's connection to Google's servers\n\n### Basic Operations\n\n1. **Creating Cells**:\n   - Code cells: Click \"+ Code\" or use Ctrl+M B\n   - Text cells: Click \"+ Text\" or use Ctrl+M M\n\n1. **Running Cells**:\n   - Click the play button next to the cell\n   - Use Shift+Enter\n   - Select Runtime > Run all from the menu\n\n1. **Cell Types**:\n   - Code cells: For Python code execution\n   - Text cells: For documentation (supports Markdown)\n\n### Important Features\n\n1. **Runtime Type**:\n   - Click Runtime > Change runtime type\n   - Select Python 3 as the runtime\n   - For GPU access: Change hardware accelerator to GPU when needed\n\n1. **File Management**:\n   - Files uploaded to Colab are temporary\n   - Connect to Google Drive for persistent storage:\n\n```python\nfrom google.colab import drive\ndrive.mount('/content/drive')\n```\n1. **Package Installation:**\n\nInstall additional packages using:\n\n::: {.panel-tabset}\n## conda\n```python\n# add a -c conda-forge to select the conda-forge channel\n# add a -q flag to install quietly (reduced output)\n# add a -y flag to prememptively accept other changes\n!conda install package_name\n```\n## pip\n```python\n!pip install package_name\n```\n:::\n\n### Best Practices\n\n1. Save Your Work:\n   - Regularly save to Google Drive (File > Save a copy in Drive)\n   - Download important notebooks locally as backups\n   \n1. Resource Management:\n   - Close unused notebooks to free up resources\n   - Be aware of idle timeouts (notebooks disconnect after extended inactivity)\n\n1. Memory Usage:\n   - Monitor memory usage through Runtime > Resource usage\n   - Use Runtime > Factory reset runtime if you run into memory issues\n\n### Keyboard Shortcuts\n\nHere are the most useful keyboard shortcuts for working in Colab:\n\n::: {.panel-tabset}\n\n## Windows/Linux\n| Action | Shortcut |\n|--------|----------|\n| Run current cell | Ctrl+Enter |\n| Run cell and move to next | Shift+Enter |\n| Run cell and insert below | Alt+Enter |\n| Insert code cell above | Ctrl+M A |\n| Insert code cell below | Ctrl+M B |\n| Convert to text cell | Ctrl+M M |\n| Convert to code cell | Ctrl+M Y |\n| Delete current cell | Ctrl+M D |\n| Toggle line numbers | Ctrl+M L |\n| Toggle output | Ctrl+M O |\n| Cut cell | Ctrl+M X |\n| Copy cell | Ctrl+M C |\n| Paste cell below | Ctrl+M V |\n| Select multiple cells | Shift+Up/Down |\n| Find and replace | Ctrl+F |\n| Save notebook | Ctrl+S |\n\n## Mac\n| Action | Shortcut |\n|--------|----------|\n| Run current cell | &#8984;+Enter |\n| Run cell and move to next | Shift+Enter |\n| Run cell and insert below | Option+Enter |\n| Insert code cell above | &#8984;+M A |\n| Insert code cell below | &#8984;+M B |\n| Convert to text cell | &#8984;+M M |\n| Convert to code cell | &#8984;+M Y |\n| Delete current cell | &#8984;+M D |\n| Toggle line numbers | &#8984;+M L |\n| Toggle output | &#8984;+M O |\n| Cut cell | &#8984;+M X |\n| Copy cell | &#8984;+M C |\n| Paste cell below | &#8984;+M V |\n| Select multiple cells | Shift+Up/Down |\n| Find and replace | &#8984;+F |\n| Save notebook | &#8984;+S |\n\n:::\n\nYou can view all available shortcuts in Colab by pressing Ctrl+M H (&#8984;+M H on Mac) or through Help > Keyboard shortcuts in the menu.\n\n### Common Issues and Solutions\n\n1. Runtime Disconnections:\n   - Click \"Reconnect\" when prompted\n   - Your variables will be reset, but saved code remains\n\n1. Package Installation Issues:\n   - Restart runtime after installing new packages\n   - Use Runtime > Restart runtime\n\n1. Memory Errors:\n   - Clear unnecessary variables\n   - Restart runtime\n   - Consider using smaller data samples during development\n\n### Getting Help\n\n- Access Colab's built-in documentation: `Help > Colab Overview`\n- View keyboard shortcuts: `Help > Keyboard shortcuts`\n- Search the Help menu for specific topics\n- Use the `Help > Search Solutions` feature\n\n[Note: This would be a good place to add screenshots showing key interface elements and operations]\n\nIn the next sections of this course, we'll be using Colab extensively for hands-on exercises. Make sure you're comfortable with these basics before proceeding.\n\n## Accessing Course Notebooks\n\nAll course notebooks are hosted on GitHub and can be accessed directly in Google Colab. There are two ways to access the notebooks:\n\n### Method 1: Direct Links\nEach section of this book includes direct \"Open in Colab\" links for relevant notebooks. Simply click the badge to open the notebook:\n\nExample\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/cropmosaiks/crop-modeling/blob/main/code/3_task_modeling/model_1_sensor.ipynb)\n\n### Method 2: Clone the Notebook\nTo choose a notebook from the repository (Add link to demo/interactive notebooks here):\n\n1. Open Google Colab (colab.research.google.com)\n1. Click `File > Open Notebook`\n1. Select the `GitHub` tab\n1. Enter the repository URL: `https://github.com/[username]/[repo]` (UPDATE WITH REPO)\n1. Select the notebook you want to open\n\n## Saving Your Work\n\nWhen you open a notebook from GitHub in Colab, it creates a temporary copy. To save your work:\n\n1. Click `File > \"Save a copy in Drive\"`\n1. This creates your own editable copy in your Google Drive\n1. All future changes will be saved to your copy\n\n## Notebook Organization\n\nThe course notebooks are organized into:  \n\n- `demos/`: Complete demonstration notebooks\n- `exercises/`: Interactive notebooks with exercises to complete\n- `solutions/`: Complete versions of exercise notebooks\n\nEach notebook includes:  \n\n- Clear instructions in markdown cells\n- Code cells with examples or exercises\n- TODO sections for exercises\n- Validation cells to check your work\n\n\n\n",
    "supporting": [
      "intro-compute_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}